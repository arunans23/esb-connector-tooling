/**
 * Copyright (c) 2024, WSO2 LLC. (https://www.wso2.com).
 *
 * WSO2 LLC. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package org.wso2.carbon.${connectorName}connector;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.apache.synapse.MessageContext;
import org.apache.synapse.SynapseConstants;
import org.wso2.carbon.connector.core.AbstractConnector;

import java.util.HashMap;
import java.util.Map;

// Generated on $timestamp

/**
 * The Utils class contains all the utils methods related to the connector.
 */
public class URLBuilderUtil extends AbstractConnector {

    private static final Log log = LogFactory.getLog(URLBuilderUtil.class);

    public static final Map<String, String> parameterNameMap = new HashMap<String, String>() {{

    #foreach ($param in $parameterNameMap.entrySet())
        put("$param.getKey()", "$param.getValue()");
    #end
    }};

    @Override
        public void connect(MessageContext messageContext) {
            messageContext.setProperty("_OH_INTERNAL_PARAM_NAME_MAP_", parameterNameMap);
        }
}
